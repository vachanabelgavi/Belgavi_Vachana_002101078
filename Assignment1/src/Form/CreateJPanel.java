/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import PersonProfile.Person;
import java.io.File;
import javax.swing.JOptionPane;
import java.util.regex.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.*;
/*import javax.swing.JFileChooser;
import java.io.*;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;*/
//import Form.ViewJPanel;
/**
 *
 * @author vachanabelgavi
 */
public class CreateJPanel extends javax.swing.JPanel {

    Person person;
    int i=0;
    
    public CreateJPanel(Person person) {
        initComponents();
        
        this.person = person;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtAddress = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        txtFax = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtSSN = new javax.swing.JTextField();
        lblDob = new javax.swing.JLabel();
        txtHome = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        lblMobile = new javax.swing.JLabel();
        lblFax = new javax.swing.JLabel();
        txtPhone = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        lblSSN = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtMedical = new javax.swing.JTextField();
        lblBank = new javax.swing.JLabel();
        txtLicense = new javax.swing.JTextField();
        lblLicense = new javax.swing.JLabel();
        txtHealth = new javax.swing.JTextField();
        txtBank = new javax.swing.JTextField();
        lblSerial = new javax.swing.JLabel();
        txtVehicle = new javax.swing.JTextField();
        lblVehicle = new javax.swing.JLabel();
        lblMedical = new javax.swing.JLabel();
        txtPlate = new javax.swing.JTextField();
        lblUnique = new javax.swing.JLabel();
        lblHealth = new javax.swing.JLabel();
        txtUnique = new javax.swing.JTextField();
        lblPhoto = new javax.swing.JLabel();
        btnUpload = new javax.swing.JButton();
        lblDevice = new javax.swing.JLabel();
        txtDevice = new javax.swing.JTextField();
        lblIp = new javax.swing.JLabel();
        txtLinkedin = new javax.swing.JTextField();
        lblLinkedin = new javax.swing.JLabel();
        lblSerialDevice = new javax.swing.JLabel();
        txtSerialDevice = new javax.swing.JTextField();
        txtIp = new javax.swing.JTextField();
        datechooser = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(850, 800));
        setMinimumSize(new java.awt.Dimension(850, 800));
        setPreferredSize(new java.awt.Dimension(850, 800));

        txtAddress.setMaximumSize(new java.awt.Dimension(180, 26));
        txtAddress.setMinimumSize(new java.awt.Dimension(180, 26));
        txtAddress.setPreferredSize(new java.awt.Dimension(180, 26));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblTitle.setText("PERSONAL DETAILS");

        txtFax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFaxActionPerformed(evt);
            }
        });

        lblName.setText("Name*");

        lblAddress.setText("Address*");

        txtSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSSNActionPerformed(evt);
            }
        });

        lblDob.setText("Date of Birth*");

        lblPhone.setText("Home/Office");

        lblMobile.setText("Phone*");

        lblFax.setText("Fax");

        lblEmail.setText("Email*");

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblSSN.setText("SSN*");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtMedical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicalActionPerformed(evt);
            }
        });

        lblBank.setText("Bank Account Number");

        lblLicense.setText("Driver's License*");

        lblSerial.setText("License Plate");

        txtVehicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleActionPerformed(evt);
            }
        });

        lblVehicle.setText("Vehicle Identifier");

        lblMedical.setText("Medical Record Number*");

        lblUnique.setText("Unique Character*");

        lblHealth.setText("Health Plan Benificiary");

        txtUnique.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUniqueActionPerformed(evt);
            }
        });

        lblPhoto.setText("Passport Photo*");
        lblPhoto.setMaximumSize(new java.awt.Dimension(54, 16));
        lblPhoto.setMinimumSize(new java.awt.Dimension(54, 16));
        lblPhoto.setPreferredSize(new java.awt.Dimension(54, 16));

        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        lblDevice.setText("Device ID");

        txtDevice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceActionPerformed(evt);
            }
        });

        lblIp.setText("IP Address");

        lblLinkedin.setText("Linkedin");

        lblSerialDevice.setText("Device Serial Number");

        datechooser.setMaxSelectableDate(new java.util.Date(1632978094000L));
        datechooser.setMaximumSize(new java.awt.Dimension(180, 26));
        datechooser.setMinSelectableDate(new java.util.Date(-946749506000L));
        datechooser.setMinimumSize(new java.awt.Dimension(180, 26));
        datechooser.setPreferredSize(new java.awt.Dimension(180, 26));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("* Required fields");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(364, 364, 364)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(419, 419, 419)
                        .addComponent(btnSave)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDob, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFax, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDevice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail)
                            .addComponent(txtName)
                            .addComponent(txtHome)
                            .addComponent(txtFax)
                            .addComponent(txtSSN)
                            .addComponent(txtPhone)
                            .addComponent(txtDevice)
                            .addComponent(txtLinkedin)
                            .addComponent(datechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHealth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMedical, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBank, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLicense, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblVehicle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSerial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUnique, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblIp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSerialDevice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMedical, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBank, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHealth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLicense, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVehicle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPlate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUnique, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSerialDevice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDob)
                            .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFax)
                            .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSSN)
                            .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDevice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDevice))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLinkedin)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHealth)
                                    .addComponent(txtHealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBank)
                                    .addComponent(txtBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblLicense, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLicense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblVehicle)
                                    .addComponent(txtVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSerial)
                                    .addComponent(txtPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblUnique, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUnique, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblIp)
                                    .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblSerialDevice)
                                    .addComponent(txtSerialDevice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblMedical)
                                .addComponent(txtMedical, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpload))))
                .addGap(56, 56, 56)
                .addComponent(btnSave)
                .addContainerGap(97, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFaxActionPerformed

    private void txtSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSSNActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtMedicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicalActionPerformed

    private void txtVehicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleActionPerformed

    private void txtUniqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUniqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUniqueActionPerformed

    private void txtDeviceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser uploadImage = new JFileChooser();
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image", "png", "jpeg", "jpg");
        uploadImage.addChoosableFileFilter(filter);
        int showDialog = uploadImage.showOpenDialog(null);
        
        if(showDialog == JFileChooser.APPROVE_OPTION){
            File selectedFile = uploadImage.getSelectedFile();
            String selectedPath = selectedFile.getAbsolutePath();
            //JOptionPane.showMessageDialog(null, selectedPath);
            
            person.icon = new ImageIcon(selectedPath);
            //lblPhotoDisplay.setIcon(person.icon);
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:        
                
        person.setName(txtName.getText());
        person.setAddress(txtAddress.getText());
        person.setFax(txtFax.getText());
        person.setEmail(txtEmail.getText());
        person.setBankAccount(txtBank.getText());
        person.setDeviceID(txtDevice.getText());
        person.setHealth(txtHealth.getText());
        person.setIp(txtIp.getText());
        person.setLicenseNumber(txtLicense.getText());
        person.setLicensePlate(txtPlate.getText());
        person.setLinkedin(txtLinkedin.getText());
        person.setMedical(txtMedical.getText());
        person.setPhone(txtPhone.getText());
        person.setHome(txtHome.getText());
        person.setSerialDevice(txtSerialDevice.getText());
        person.setSsn(txtSSN.getText());
        person.setUniCode(txtUnique.getText());
        person.setVehicleID(txtVehicle.getText());
        person.setDob(datechooser.getDate());
        
        formValidate();
        
                
        //System.out.println(phone);
        //System.out.println(home);
        
        /*if(i>7){
            JOptionPane.showMessageDialog(this, "Information Saved Successfully!!");
        }
        else{
            JOptionPane.showMessageDialog(this, "Please enter all the required fields");
        }*/
    }//GEN-LAST:event_btnSaveActionPerformed
    
    //Form validation method
    public void formValidate(){
        
        Pattern pattern;
        
        //name
        String name = txtName.getText();
        String nameValidate = "/^[A-Z][a-zA-Z]{1,30}$";
        pattern = Pattern.compile(nameValidate);
        
        if(name.equals("") || name.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter your full name");
            if(!name.equals("") || !name.isEmpty()){
                if(!pattern.matcher(name).matches()){
                    JOptionPane.showMessageDialog(null, "Entered name is not correct!!"); }
                else{
                    i++;
                    }
                
            }
            
        }
        
        //address
        String address = txtAddress.getText();
        String addressValidate = "[0-9]{1,}\\s[A-Za-z]{2,}\\s[A-Za-z]{2,}\\s[A-Za-z]{2,}\\s[A-Za-z]{2,}\\s[A-Za-z]{2,}\\s[A-Za-z]{2,}$";
        pattern = Pattern.compile(addressValidate);
        
        if(address.equals("") || address.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter your address");
            if(!address.equals("") || !address.isEmpty()){
                if(!pattern.matcher(address).matches()){
                    JOptionPane.showMessageDialog(null, "Enter the street number, lane and city!!"); 
                    
                }i++;
            }
        }    
        
        //email
        String email = txtEmail.getText();
        String emailValidate = "^[a-zA-Z0-9_+&*-]+(?:\\." + "[a-zA-Z0-9_+&*-]+)*@" + "(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        pattern = Pattern.compile(emailValidate);
        
        if(email.equals("") || email.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter your Email Address");
            if(!email.equals("") || !email.isEmpty()){
                if(!pattern.matcher(email).matches()){
                    JOptionPane.showMessageDialog(null, "Entered email address is not correct!!");
                    
                }i++;
            }
        }
        
        
        //fax
        String fax = txtFax.getText();
        String faxValidate = "/^[0-9]{3}-[0-9]{3}-[0-9]{4}/$";
        pattern = Pattern.compile(faxValidate);
        
        if(!fax.equals("") || !fax.isEmpty()){
            if(!pattern.matcher(fax).matches()){
                    JOptionPane.showMessageDialog(null, "Please use format 123-123-1234!!");
            }
        }
        
        //bankaccount
        String accountValidate = "/^[0-9]{4,17}$/gm";
        String bank = txtBank.getText();
        pattern = Pattern.compile(accountValidate);
        
        if(!bank.equals("") || !bank.isEmpty()){
            if(!pattern.matcher(bank).matches()){
                    JOptionPane.showMessageDialog(null, "Please enter the correct Account number!!");
            }
        }
        
        String phone = txtPhone.getText();
        String home = txtHome.getText();
        String phoneValidate = "/^[0-9]{3}-[0-9]{3}-[0-9]{4}";
        pattern = Pattern.compile(phoneValidate);
        
        if(phone.equals("") || phone.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter your phone number ");
            if(!phone.equals("") || !phone.isEmpty()){
                if(!pattern.matcher(phone).matches()){
                    JOptionPane.showMessageDialog(null, "Please use format 123-123-1234");
                    
                }i++;
            }    
        }
        
        
        if(!home.equals("") || !home.isEmpty()){
            if(!pattern.matcher(home).matches()){
                JOptionPane.showMessageDialog(null, "Please use format 123-123-1234");   
            }
        }
        
        //Device ID
        String device = txtDevice.getText();
        String deviceValidate = "/^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$";
        pattern = Pattern.compile(deviceValidate);
        
        if(!device.equals("") || !device.isEmpty()){
            if(pattern.matcher(device).matches()){
                    JOptionPane.showMessageDialog(null, "Please enter the correct Device Identifier!!");
            }
        }
        
        
        //HealthPlan
        String health = txtHealth.getText();
        String healthValidate = "/^[0-9][A-Z]{2}[0-9]-[A-Z]{2}[0-9]-[A-Z]{2}[0-9]{2}$";
        pattern = Pattern.compile(healthValidate);
        
        if(!health.equals("") || !health.isEmpty()){
            if(pattern.matcher(healthValidate).matches()){
                    JOptionPane.showMessageDialog(null, "Please enter the correct Health Beneficiary Number.");
            }
        }
        
        //IP
        String ip = txtIp.getText();
        String ipValidate = "/^[0-9]{3}.[0-9]{3}.[0-9]{3}.[0-9]{3}$";
        pattern = Pattern.compile(ipValidate);
        
        if(!ip.equals("") || !ip.isEmpty()){
            if(pattern.matcher(ipValidate).matches()){
                JOptionPane.showMessageDialog(null, "Please enter the correct IP address.");
            }
        }
                
        //Drivers License
        String license = txtLicense.getText();
        String licenseValidate = "/^[A-Z][0-9]{8}$";
        pattern = Pattern.compile(licenseValidate);
        
        if(!license.equals("") || !license.isEmpty()){
            if(pattern.matcher(licenseValidate).matches()){
                JOptionPane.showMessageDialog(null, "Please enter the correct Driver's License Number.");
            }
        }
        
        //License Plate
        String plate = txtPlate.getText();
        String plateValidate = "/^[A-Z]{2}\\s[0-9]{4}";
        pattern = Pattern.compile(plateValidate);
        
        if(!plate.equals("") || !plate.isEmpty()){
            if(pattern.matcher(plateValidate).matches()){
                    JOptionPane.showMessageDialog(null, "Please enter the correct License Plate.");
            }
        }
        
        //Medical Record Number
        String medical = txtMedical.getText();
        String medicalValidate = "/^[0-9]{7}$";
        pattern = Pattern.compile(medicalValidate);
        
        
        if(medical.equals("") || medical.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter your Medical Record Number.");
            if(!medical.equals("") || !medical.isEmpty()){
                if(pattern.matcher(medical).matches()){
                    JOptionPane.showMessageDialog(null, "Please enter the correct Medical Record Number.");
                    
                }i++;
            }
        }
        
        //device serial
        String serialDevice = txtSerialDevice.getText();
        String serialValidate = "/^[0-9A-Za-z]$";
        pattern = Pattern.compile(serialValidate);
        
        if(!serialDevice.equals("") || !serialDevice.isEmpty()){
            if(pattern.matcher(serialDevice).matches()){
                JOptionPane.showMessageDialog(null, "Please enter the correct Device Serial Number.");
            }
        }
        
        //ssn
        String ssn = txtSSN.getText();
        String ssnValidate = "/^[0-9]{3}-[0-9]{2}-[0-9]{4}$";
        pattern = Pattern.compile(ssnValidate);
        
        if(ssn.equals("") || ssn.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter your SSN.");
            if(pattern.matcher(ssn).matches()){
                JOptionPane.showMessageDialog(null, "Please use format 123-12-1234.");
                
            }i++;
        }
        
        
        //unicode
        String unicode = txtUnique.getText();
        String unicodeValidate = "[a-zA-Z0-9]$";
        pattern = Pattern.compile(unicodeValidate);
        
        if(unicode.equals("") || unicode.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter the Unique Character.");
            if(!unicode.equals("") || !unicode.isEmpty()){
                if(pattern.matcher(unicode).matches()){
                    JOptionPane.showMessageDialog(null, "Please enter the correct Unique Character.");
                    
                }i++;
            }
        }
        
        //vehicle ID
        String vehicle = txtVehicle.getText();
        String vehicleValidate = "/^[(A-H|J-N|P|R-Z|0-9)]{17}$";                                   //SALVA2AE4EH877482
        pattern = Pattern.compile(vehicleValidate);
        
        if(!vehicle.equals("") || !vehicle.isEmpty()){
            if(pattern.matcher(vehicle).matches()){
                JOptionPane.showMessageDialog(null, "Please enter the correct Vehicle Identifier.");
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpload;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblBank;
    private javax.swing.JLabel lblDevice;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFax;
    private javax.swing.JLabel lblHealth;
    private javax.swing.JLabel lblIp;
    private javax.swing.JLabel lblLicense;
    private javax.swing.JLabel lblLinkedin;
    private javax.swing.JLabel lblMedical;
    private javax.swing.JLabel lblMobile;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblSerial;
    private javax.swing.JLabel lblSerialDevice;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUnique;
    private javax.swing.JLabel lblVehicle;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtBank;
    private javax.swing.JTextField txtDevice;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtHealth;
    private javax.swing.JTextField txtHome;
    private javax.swing.JTextField txtIp;
    private javax.swing.JTextField txtLicense;
    private javax.swing.JTextField txtLinkedin;
    private javax.swing.JTextField txtMedical;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPlate;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtSerialDevice;
    private javax.swing.JTextField txtUnique;
    private javax.swing.JTextField txtVehicle;
    // End of variables declaration//GEN-END:variables
}
